version: '3.8'

services:
  # MCP Server
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crawl4ai-mcp-server
    ports:
      - "8080:8080"
    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8080
      - MCP_STORAGE_PATH=/data
      - QDRANT_URL=http://qdrant:6333
      - MEMGRAPH_URL=bolt://memgraph:7687
      - RUST_LOG=info,mcp_server=debug
    volumes:
      - ./data:/data
      - ./models:/models
    depends_on:
      - qdrant
      - memgraph
    networks:
      - crawl4ai-network
    restart: unless-stopped

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: crawl4ai-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"  # gRPC port
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__SERVICE__ENABLE_TLS=false
      - QDRANT__LOG_LEVEL=INFO
    networks:
      - crawl4ai-network
    restart: unless-stopped

  # Memgraph Graph Database
  memgraph:
    image: memgraph/memgraph:latest
    container_name: crawl4ai-memgraph
    ports:
      - "7687:7687"
      - "3000:3000"  # Memgraph Lab
    volumes:
      - memgraph_data:/var/lib/memgraph
      - memgraph_log:/var/log/memgraph
    environment:
      - MEMGRAPH_LOG_LEVEL=INFO
      - MEMGRAPH_QUERY_EXECUTION_TIMEOUT_SEC=600
    command: ["--log-level=INFO", "--query-execution-timeout-sec=600", "--memory-limit=4096"]
    networks:
      - crawl4ai-network
    restart: unless-stopped

  # Memgraph Lab (Web UI for Memgraph)
  memgraph-lab:
    image: memgraph/lab:latest
    container_name: crawl4ai-memgraph-lab
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_MEMGRAPH_HOST=memgraph
      - REACT_APP_MEMGRAPH_PORT=7687
    depends_on:
      - memgraph
    networks:
      - crawl4ai-network
    restart: unless-stopped

networks:
  crawl4ai-network:
    driver: bridge

volumes:
  qdrant_data:
  memgraph_data:
  memgraph_log: